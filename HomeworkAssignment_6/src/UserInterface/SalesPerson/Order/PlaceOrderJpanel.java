/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SalesPerson.Order;

import UserInterface.Components.HasTitle;
import UserInterface.Components.TablePopulatable;
import biz.Components.Business;
import biz.Components.Customer;
import biz.Components.OfferProduct;
import biz.Components.Order;
import biz.Components.OrderProduct;
import biz.Components.SalesPerson;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

/**
 *
 * @author hezj
 */
public class PlaceOrderJpanel extends javax.swing.JPanel implements HasTitle, TablePopulatable<OfferProduct> {
    private SalesPerson salesPerson;
    private Customer customer;
    private Order order;

    /**
     * Creates new form PlaceOrderJpanel
     */
    public PlaceOrderJpanel(SalesPerson salesPerson, Customer customer) {
        initComponents();
        this.salesPerson = salesPerson;
        this.customer = customer;
        
        this.order = Business.getInstance().getOrderDirectory().newElement();
        this.order.setSoldBy(salesPerson);
        this.order.setBoughtBy(customer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductOffer = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrderProduct = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtRevenue = new javax.swing.JTextField();
        btnPlaceOrder = new javax.swing.JButton();
        txtActualPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        btnActualPrice = new javax.swing.JButton();
        btnQuantity = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtActualPrice2 = new javax.swing.JTextField();
        txtQuantity2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();

        tblProductOffer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Supplier", "Lowest Price", "Target Price", "Highest Price", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProductOffer);

        tblOrderProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Quantity", "Actual Unit Price", "Actual Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOrderProduct);

        jLabel2.setText("Product Offer List");

        jLabel3.setText("Quantity:");

        btnAdd.setText("Add Selected To Order");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel1.setText("Total Price:");

        txtTotalPrice.setEnabled(false);

        jLabel4.setText("Revenue:");

        btnPlaceOrder.setText("Place Order");
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });

        jLabel5.setText("Actual Price:");

        btnRemove.setText("Remove Selected From Order");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnActualPrice.setText("Go");
        btnActualPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualPriceActionPerformed(evt);
            }
        });

        btnQuantity.setText("Go");
        btnQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuantityActionPerformed(evt);
            }
        });

        jLabel6.setText("ModifyS elected Actual Price to:");

        jLabel7.setText("Modify Selected Quantity to:");

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel8.setText("Find Product:");

        btnFind.setText("Go");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReset))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6))
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(txtQuantity2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnQuantity))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(txtActualPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnActualPrice))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRemove))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(btnFind))
                            .addComponent(btnPlaceOrder, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtActualPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdd)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnReset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(jLabel3)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtActualPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemove)
                    .addComponent(jLabel1)
                    .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualPrice)
                    .addComponent(jLabel6)
                    .addComponent(txtActualPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtQuantity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(btnPlaceOrder))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        this.order.setStatus("Placed");
        JOptionPane.showMessageDialog(this, "Order Placed");
    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        OfferProduct offerProduct = getSelected();
        if (offerProduct == null) {
            return;
        }

        String actualPriceText = txtActualPrice.getText();
        double actualPrice;
        try {
            actualPrice = Double.parseDouble(actualPriceText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid price.");
            return;
        }
        if (actualPrice > offerProduct.getHighestPrice()) {
            JOptionPane.showMessageDialog(this, "Price too high.");
            return;
        }
        if (actualPrice < offerProduct.getLowestPrice()) {
            JOptionPane.showMessageDialog(this, "Price too low.");
            return;
        }
        
        String quantityText = txtQuantity.getText();
        int quantity;
        try {
            quantity = Integer.parseInt(quantityText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid quantity.");
            return;
        }
        if (quantity > offerProduct.getProduct().getStock()) {
            JOptionPane.showMessageDialog(this, "Not enough product in stock.");
            return;
        }

        offerProduct.getProduct().setStock(offerProduct.getProduct().getStock() - quantity);

        OrderProduct orderProduct = order.findElement(op -> op.getOfferProduct().equals(offerProduct));
        if (orderProduct != null) {
            orderProduct.setQuantity(orderProduct.getQuantity() + quantity);
        } else {
            orderProduct = order.newElement();
            orderProduct.setQuantity(quantity);
            orderProduct.setActualPrice(actualPrice);
            orderProduct.setOfferProduct(offerProduct);
        }
        populateOrder();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        String productName = txtProductName.getText();
        ArrayList<OfferProduct> arr = customer.getMarket().getMarketOffer().findElements(op -> op.getProduct().getProductName().equals(productName));
        populateTable(arr);
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        populateTable();
    }//GEN-LAST:event_btnResetActionPerformed

    private OrderProduct getSelectedOrderProduct() {
        int selectedCount = tblOrderProduct.getSelectedRowCount();
        if (selectedCount > 1) {
            JOptionPane.showMessageDialog(this, "Please select no more than 1 row.");
            return null;
        }
        if (selectedCount < 1) {
            JOptionPane.showMessageDialog(this, "Please select 1 row.");
            return null;
        }

        return (OrderProduct) tblOrderProduct.getValueAt(tblOrderProduct.getSelectedRow(), 0);
    }

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        OrderProduct op = getSelectedOrderProduct();
        if (op == null) {
            return;
        }
        order.removeElement(op);
        populateOrder();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnActualPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualPriceActionPerformed
        OrderProduct orderProduct = getSelectedOrderProduct();
        if (orderProduct == null) {
            return;
        }
        
        String actualPriceTxt = txtActualPrice.getText();
        double actualPrice;
        try {
            actualPrice = Double.parseDouble(actualPriceTxt);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid price.");
            return;
        }
        if (actualPrice > orderProduct.getOfferProduct().getHighestPrice()) {
            JOptionPane.showMessageDialog(this, "Price too high.");
            return;
        }
        if (actualPrice < orderProduct.getOfferProduct().getLowestPrice()) {
            JOptionPane.showMessageDialog(this, "Price too low.");
            return;
        }

        orderProduct.setActualPrice(actualPrice);
        populateOrder();
    }//GEN-LAST:event_btnActualPriceActionPerformed

    private void btnQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuantityActionPerformed
        OrderProduct orderProduct = getSelectedOrderProduct();
        if (orderProduct == null) {
            return;
        }
        
        OfferProduct offerProduct = orderProduct.getOfferProduct();
        
        String quantityText = txtQuantity.getText();
        int quantity;
        try {
            quantity = Integer.parseInt(quantityText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid quantity.");
            return;
        }
        if (quantity > offerProduct.getProduct().getStock()) {
            JOptionPane.showMessageDialog(this, "Not enough product in stock.");
            return;
        }
        
        orderProduct.setQuantity(orderProduct.getQuantity() + quantity);
        offerProduct.getProduct().setStock(offerProduct.getProduct().getStock() - quantity);
        populateOrder();
    }//GEN-LAST:event_btnQuantityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualPrice;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JButton btnQuantity;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblOrderProduct;
    private javax.swing.JTable tblProductOffer;
    private javax.swing.JTextField txtActualPrice;
    private javax.swing.JTextField txtActualPrice2;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtQuantity2;
    private javax.swing.JTextField txtRevenue;
    private javax.swing.JTextField txtTotalPrice;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
        return "Place Order";
    }

    @Override
    public JTable getTable() {
        return tblProductOffer;
    }

    @Override
    public Object[] populateRow(OfferProduct op) {
        return new Object[] {
            op,
            op.getProduct().getSupplier(),
            op.getLowestPrice(),
            op.getTargetPrice(),
            op.getHighestPrice(),
            op.getProduct().getStock()
        };
    }

    @Override
    public void populateTable() {
        populateTable(customer.getMarket().getMarketOffer().getElementArrayList());
    }
    
    public void populateOrder() {
        DefaultTableModel dtm = (DefaultTableModel) tblOrderProduct.getModel();
        dtm.setRowCount(0);

        for (OrderProduct op: order.getElementArrayList()) {
            dtm.addRow(new Object[] {
                op,
                op.getQuantity(),
                op.getActualPrice(),
                op.getTotalPrice()
            });           
        }
        
        txtTotalPrice.setText(Double.toString(order.totalPrice()));
        txtRevenue.setText(Double.toString(order.getRevenue()));
    }
}
