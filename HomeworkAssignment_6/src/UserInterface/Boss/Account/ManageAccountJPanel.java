/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Boss.Account;

import UserInterface.Components.HasTitle;
import UserInterface.Components.ParentUI;
import UserInterface.Components.TablePopulatable;
import biz.Components.Account;
import biz.Components.Boss;
import biz.Components.Business;
import biz.Components.SalesPerson;
import biz.Components.Supplier;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author hezj
 */
public class ManageAccountJPanel extends javax.swing.JPanel implements HasTitle, TablePopulatable<Account> {
    private ParentUI parent;
    
    /**
     * Creates new form AccountList
     */
    public ManageAccountJPanel(ParentUI parent) {
        initComponents();
        this.parent = parent;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAccount = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Username", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAccount);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, 540));

        btnUpdate.setText("Update Selected");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, 160, 40));

        removeButton.setText("Remove Selected");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        add(removeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 140, 160, 40));

        btnExport.setText("Export to csv");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });
        add(btnExport, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 200, 160, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Account selected = getSelected();
        if (selected == null) {
            return;
        }
        AccountUpdate jp = new AccountUpdate(selected);
        parent.pushComponent(jp);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        Account selected = getSelected();
        if (selected == null) {
            return;
        }
        if (!Business.getInstance().getAccountCatalog().removeAccount(selected)) {
            JOptionPane.showMessageDialog(this, "Cannot Remove this account.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        populateTable();
        JOptionPane.showMessageDialog(this, "Removed");
    }//GEN-LAST:event_removeButtonActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        toCSV();
    }//GEN-LAST:event_btnExportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeButton;
    private javax.swing.JTable tblAccount;
    // End of variables declaration//GEN-END:variables

    @Override
    public String getTitle() {
        return "Account List";
    }

    @Override
    public JTable getTable() {
        return tblAccount;
    }

    @Override
    public Object[] populateRow(Account element) {
        String role;
        if (element instanceof Boss) {
            role = "Boss";
        } else if (element instanceof Supplier) {
            role = "Supplier";
        } else if (element instanceof SalesPerson) {
            role = "SalesPerson";
        } else {
            role = "Unknown Role";
        }
        return new Object[] {element, element.getUsername(), role};
    }

    @Override
    public void populateTable() {
        populateTable(Business.getInstance().getAccountCatalog().getElementArrayList());
    }
}
