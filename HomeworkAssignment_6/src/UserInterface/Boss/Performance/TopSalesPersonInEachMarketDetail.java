/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Boss.Performance;

import UserInterface.Components.HasTitle;
import UserInterface.Components.TablePopulatable;
import biz.Components.Business;
import biz.Components.Market;
import biz.Components.SalesPerson;
import java.util.ArrayList;
import javax.swing.JTable;

/**
 *
 * @author hezj
 */
public class TopSalesPersonInEachMarketDetail extends javax.swing.JPanel implements TablePopulatable<SalesPerson>, HasTitle {
    private Market market;
    
    /**
     * Creates new form TopSalesPersonInEachMarketDetail
     */
    public TopSalesPersonInEachMarketDetail(Market market) {
        initComponents();
        this.market = market;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SalesPerson", "Username", "Total Revenue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public JTable getTable() {
        return jTable1;
    }

    @Override
    public Object[] populateRow(SalesPerson salesPerson) {
        return new Object[] {
            salesPerson,
            salesPerson.getUsername(),
            String.format("%.2f", salesPerson.getSalesRevenue(market))
        };
    }

    @Override
    public void populateTable() {
        ArrayList<SalesPerson> salesPersonArrayList = Business.getInstance().getSalesPersonCatalog().getElementArrayList();
        salesPersonArrayList.sort((s1, s2) -> Double.compare(s1.getSalesRevenue(market), s2.getSalesRevenue(market)));
        int toIndex = salesPersonArrayList.size() > 10 ? 10 : salesPersonArrayList.size();
        populateTable(new ArrayList<> (salesPersonArrayList.subList(0, toIndex)));
    }

    @Override
    public String getTitle() {
        return String.format("Top 10 sales person by revenu for %s", market);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
